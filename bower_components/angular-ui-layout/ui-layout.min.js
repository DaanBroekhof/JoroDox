"use strict";angular.module("ui.layout",[]).controller("uiLayoutCtrl",["$scope","$attrs","$element","LayoutContainer",function($scope,$attrs,$element,LayoutContainer){function draw(){var position=ctrl.sizeProperties.flowProperty,dividerSize=parseInt(opts.dividerSize),elementSize=$element[0][ctrl.sizeProperties.offsetSize];if(null!==ctrl.movingSplitbar){var splitbarIndex=ctrl.containers.indexOf(ctrl.movingSplitbar),nextSplitbarIndex=splitbarIndex+2<ctrl.containers.length?splitbarIndex+2:null;if(splitbarIndex>-1){var processedContainers=ctrl.processSplitbar(ctrl.containers[splitbarIndex]),beforeContainer=processedContainers.beforeContainer,afterContainer=processedContainers.afterContainer;if(!beforeContainer.collapsed&&!afterContainer.collapsed){var difference=ctrl.movingSplitbar[position]-lastPos,newPosition=ctrl.movingSplitbar[position]-difference;newPosition=Math.min(elementSize-dividerSize,newPosition),angular.isNumber(beforeContainer.beforeMinValue)&&newPosition<beforeContainer.beforeMinValue&&(newPosition=beforeContainer.beforeMinValue),angular.isNumber(beforeContainer.beforeMaxValue)&&newPosition>beforeContainer.beforeMaxValue&&(newPosition=beforeContainer.beforeMaxValue),null!==afterContainer&&angular.isNumber(afterContainer.afterMinValue)&&newPosition>afterContainer.afterMinValue-dividerSize&&(newPosition=afterContainer.afterMinValue-dividerSize),null!==afterContainer&&angular.isNumber(afterContainer.afterMaxValue)&&newPosition<afterContainer.afterMaxValue&&(newPosition=afterContainer.afterMaxValue),beforeContainer.size=newPosition-beforeContainer[position];var oldAfterContainerPosition=afterContainer[position];afterContainer[position]=newPosition+dividerSize,afterContainer[position]!=oldAfterContainerPosition&&(afterContainer.size=null!==nextSplitbarIndex?oldAfterContainerPosition+afterContainer.size-(newPosition+dividerSize):elementSize-(newPosition+dividerSize)),ctrl.movingSplitbar[position]=newPosition}}}animationFrameRequested=null}function offset(element){var rawDomNode=element[0],body=document.documentElement||document.body,scrollX=window.pageXOffset||body.scrollLeft,scrollY=window.pageYOffset||body.scrollTop,clientRect=rawDomNode.getBoundingClientRect(),x=clientRect.left+scrollX,y=clientRect.top+scrollY;return{left:x,top:y}}var animationFrameRequested,lastPos,ctrl=this,opts=angular.extend({},$scope.$eval($attrs.uiLayout),$scope.$eval($attrs.options)),numOfSplitbars=0,lastDividerRemoved=!1;return ctrl.containers=[],ctrl.movingSplitbar=null,ctrl.bounds=$element[0].getBoundingClientRect(),ctrl.isUsingColumnFlow="column"===opts.flow,ctrl.sizeProperties=ctrl.isUsingColumnFlow?{sizeProperty:"width",offsetSize:"offsetWidth",offsetPos:"left",flowProperty:"left",oppositeFlowProperty:"right",mouseProperty:"clientX",flowPropertyPosition:"x"}:{sizeProperty:"height",offsetSize:"offsetHeight",offsetPos:"top",flowProperty:"top",oppositeFlowProperty:"bottom",mouseProperty:"clientY",flowPropertyPosition:"y"},$element.addClass("stretch").addClass("ui-layout-"+(opts.flow||"row")),opts.sizes=opts.sizes||[],opts.maxSizes=opts.maxSizes||[],opts.minSizes=opts.minSizes||[],opts.dividerSize=opts.dividerSize||10,opts.collapsed=opts.collapsed||[],ctrl.opts=opts,$scope.updateDisplay=function(){console.log(ctrl.containers),ctrl.updateDisplay()},ctrl.mouseUpHandler=function(event){return null!==ctrl.movingSplitbar&&(ctrl.movingSplitbar=null),event},ctrl.mouseMoveHandler=function(mouseEvent){var mousePos=mouseEvent[ctrl.sizeProperties.mouseProperty]||mouseEvent.originalEvent&&mouseEvent.originalEvent[ctrl.sizeProperties.mouseProperty]||(mouseEvent.targetTouches?mouseEvent.targetTouches[0][ctrl.sizeProperties.mouseProperty]:0);lastPos=mousePos-offset($element)[ctrl.sizeProperties.offsetPos],animationFrameRequested&&window.cancelAnimationFrame(animationFrameRequested),animationFrameRequested=window.requestAnimationFrame(draw)},ctrl.processSplitbar=function(container){var index=ctrl.containers.indexOf(container),setValues=function(container){var start=container[ctrl.sizeProperties.flowProperty],end=container[ctrl.sizeProperties.flowProperty]+container.size;container.beforeMinValue=angular.isNumber(container.minSize)?start+container.minSize:start,container.beforeMaxValue=angular.isNumber(container.maxSize)?start+container.maxSize:null,container.afterMinValue=angular.isNumber(container.minSize)?end-container.minSize:end,container.afterMaxValue=angular.isNumber(container.maxSize)?end-container.maxSize:null};if(index>-1){var beforeContainer=index>0?ctrl.containers[index-1]:null,afterContainer=index+1<=ctrl.containers.length?ctrl.containers[index+1]:null;return null!==beforeContainer&&setValues(beforeContainer),null!==afterContainer&&setValues(afterContainer),{beforeContainer:beforeContainer,afterContainer:afterContainer}}return null},ctrl.isPercent=function(num){return num&&angular.isString(num)&&num.indexOf("%")>-1?!0:!1},ctrl.convertToPixels=function(size,parentSize){return Math.floor(parentSize*(parseInt(size)/100))},ctrl.updateDisplay=function(){var c,i,dividerSize=parseInt(opts.dividerSize),elementSize=$element[0].getBoundingClientRect()[ctrl.sizeProperties.sizeProperty],availableSize=elementSize-dividerSize*numOfSplitbars,originalSize=availableSize,usedSpace=0,numOfAutoContainers=0;if(ctrl.containers.length>0&&$element.children().length>0){if(!lastDividerRemoved&&ctrl.containers.length===$element.children().length){var lastContainerIndex=ctrl.containers.length-1;ctrl.containers[lastContainerIndex].element.remove(),ctrl.containers.splice(lastContainerIndex,1),lastDividerRemoved=!0,numOfSplitbars--}for(i=0;i<ctrl.containers.length;i++)if(!LayoutContainer.isSplitbar(ctrl.containers[i])){var child=ctrl.containers[i].element;opts.maxSizes[i]=child.attr("max-size")||opts.maxSizes[i]||null,opts.minSizes[i]=child.attr("min-size")||opts.minSizes[i]||null,opts.sizes[i]=child.attr("size")||opts.sizes[i]||"auto";var sizePattern=/\d+\s*(px|%)\s*$/i;opts.sizes[i]="auto"!=opts.sizes[i]&&opts.sizes[i].match(sizePattern)?opts.sizes[i]:"auto",opts.minSizes[i]=opts.minSizes[i]&&opts.minSizes[i].match(sizePattern)?opts.minSizes[i]:null,opts.maxSizes[i]=opts.maxSizes[i]&&opts.maxSizes[i].match(sizePattern)?opts.maxSizes[i]:null,"auto"!=opts.sizes[i]&&(opts.sizes[i]=ctrl.isPercent(opts.sizes[i])?ctrl.convertToPixels(opts.sizes[i],originalSize):parseInt(opts.sizes[i])),null!=opts.minSizes[i]&&(opts.minSizes[i]=ctrl.isPercent(opts.minSizes[i])?ctrl.convertToPixels(opts.minSizes[i],originalSize):parseInt(opts.minSizes[i]),opts.sizes[i]<opts.minSizes[i]&&(opts.sizes[i]=opts.minSizes[i])),null!=opts.maxSizes[i]&&(opts.maxSizes[i]=ctrl.isPercent(opts.maxSizes[i])?ctrl.convertToPixels(opts.maxSizes[i],originalSize):parseInt(opts.maxSizes[i]),opts.sizes[i]>opts.maxSizes[i]&&(opts.sizes[i]=opts.maxSizes[i])),"auto"===opts.sizes[i]?numOfAutoContainers++:availableSize-=opts.sizes[i]}var autoSize=Math.floor(availableSize/numOfAutoContainers);for(i=0;i<ctrl.containers.length;i++){if(c=ctrl.containers[i],c[ctrl.sizeProperties.flowProperty]=usedSpace,c.maxSize=opts.maxSizes[i],c.minSize=opts.minSizes[i],c.collapsed=c.collapsed||opts.collapsed[i],LayoutContainer.isSplitbar(c))c.size=dividerSize;else{var newSize="auto"===opts.sizes[i]?autoSize:opts.sizes[i];c.size=null!==newSize?newSize:autoSize}usedSpace+=c.size}}},ctrl.addContainer=function(container){ctrl.containers.push(container),LayoutContainer.isSplitbar(container)&&numOfSplitbars++,ctrl.updateDisplay()},ctrl.getContainers=function(){return ctrl.containers},ctrl.toggleBefore=function(splitbar){var index=ctrl.containers.indexOf(splitbar)-1,c=ctrl.containers[index];c.collapsed=!ctrl.containers[index].collapsed;var nextSplitbar=ctrl.containers[index+1],nextContainer=ctrl.containers[index+2];return $scope.$apply(function(){c.collapsed?(c.actualSize=c.size,c.size=0,nextSplitbar&&(nextSplitbar[ctrl.sizeProperties.flowProperty]-=c.actualSize),nextContainer&&(nextContainer[ctrl.sizeProperties.flowProperty]-=c.actualSize,nextContainer.size+=c.actualSize)):(c.size=c.actualSize,nextSplitbar&&(nextSplitbar[ctrl.sizeProperties.flowProperty]+=c.actualSize),nextContainer&&(nextContainer[ctrl.sizeProperties.flowProperty]+=c.actualSize,nextContainer.size-=c.actualSize))}),c.collapsed},ctrl.toggleAfter=function(splitbar){var endDiff,index=ctrl.containers.indexOf(splitbar)+1,c=ctrl.containers[index],prevSplitbar=ctrl.containers[index-1],prevContainer=ctrl.containers[index-2],isLastContainer=index===ctrl.containers.length-1;return ctrl.bounds=$element[0].getBoundingClientRect(),c.collapsed=!ctrl.containers[index].collapsed,$scope.$apply(function(){c.collapsed?(c.actualSize=c.size,c.size=0,endDiff=isLastContainer?ctrl.bounds[ctrl.sizeProperties.sizeProperty]-c[ctrl.sizeProperties.flowProperty]-c.actualSize:0,prevSplitbar&&(prevSplitbar[ctrl.sizeProperties.flowProperty]+=c.actualSize+endDiff),prevContainer&&(prevContainer.size+=c.actualSize+endDiff)):(c.size=c.actualSize,endDiff=isLastContainer?ctrl.bounds[ctrl.sizeProperties.sizeProperty]-c[ctrl.sizeProperties.flowProperty]-c.actualSize:0,prevSplitbar&&(prevSplitbar[ctrl.sizeProperties.flowProperty]-=c.actualSize+endDiff),prevContainer&&(prevContainer.size-=c.actualSize+endDiff))}),c.collapsed},ctrl.getPreviousSplitbarContainer=function(currentSplitbar){if(LayoutContainer.isSplitbar(currentSplitbar)){var currentSplitbarIndex=ctrl.containers.indexOf(currentSplitbar),previousSplitbarIndex=currentSplitbarIndex-2;return previousSplitbarIndex>=0?ctrl.containers[previousSplitbarIndex]:null}return null},ctrl.getNextSplitbarContainer=function(currentSplitbar){if(LayoutContainer.isSplitbar(currentSplitbar)){var currentSplitbarIndex=ctrl.containers.indexOf(currentSplitbar),nextSplitbarIndex=currentSplitbarIndex+2;return currentSplitbarIndex>0&&nextSplitbarIndex<ctrl.containers.length?ctrl.containers[nextSplitbarIndex]:null}return null},ctrl}]).directive("uiLayout",["$window",function($window){return{restrict:"AE",controller:"uiLayoutCtrl",link:function(scope,element,attrs,ctrl){function onResize(){scope.$apply(function(){ctrl.updateDisplay()})}scope.$watch(element[0][ctrl.sizeProperties.offsetSize],function(){ctrl.updateDisplay()}),angular.element($window).bind("resize",onResize),scope.$on("$destroy",function(){angular.element($window).unbind("resize",onResize)})}}}]).directive("uiSplitbar",["LayoutContainer",function(LayoutContainer){var htmlElement=angular.element(document.body.parentElement);return{restrict:"EAC",require:"^uiLayout",scope:{},link:function(scope,element,attrs,ctrl){element.hasClass("stretch")||element.addClass("stretch"),element.hasClass("ui-splitbar")||element.addClass("ui-splitbar"),scope.splitbar=LayoutContainer.Splitbar(),scope.splitbar.element=element;var prevButton=angular.element(element.children()[0]),afterButton=angular.element(element.children()[1]),prevChevron=angular.element(prevButton.children()[0]),afterChevron=angular.element(afterButton.children()[0]),chevronLeft="glyphicon-chevron-left",chevronRight="glyphicon-chevron-right",chevronUp="glyphicon-chevron-up",chevronDown="glyphicon-chevron-down",prevChevronClass=ctrl.isUsingColumnFlow?chevronLeft:chevronUp,afterChevronClass=ctrl.isUsingColumnFlow?chevronRight:chevronDown;prevChevron.addClass(prevChevronClass),afterChevron.addClass(afterChevronClass),prevButton.on("click",function(){var prevSplitbarBeforeButton,prevSplitbarAfterButton,result=ctrl.toggleBefore(scope.splitbar),previousSplitbar=ctrl.getPreviousSplitbarContainer(scope.splitbar);null!==previousSplitbar&&(prevSplitbarBeforeButton=angular.element(previousSplitbar.element.children()[0]),prevSplitbarAfterButton=angular.element(previousSplitbar.element.children()[1])),ctrl.isUsingColumnFlow?result?(afterButton.css("display","none"),prevChevron.removeClass(chevronLeft),prevChevron.addClass(chevronRight),null!==previousSplitbar&&(prevSplitbarBeforeButton.css("display","none"),prevSplitbarAfterButton.css("display","none"))):(afterButton.css("display","inline"),prevChevron.removeClass(chevronRight),prevChevron.addClass(chevronLeft),null!==previousSplitbar&&(prevSplitbarBeforeButton.css("display","inline"),prevSplitbarAfterButton.css("display","inline"))):result?(afterButton.css("display","none"),prevChevron.removeClass(chevronUp),prevChevron.addClass(chevronDown),null!==previousSplitbar&&(prevSplitbarBeforeButton.css("display","none"),prevSplitbarAfterButton.css("display","none"))):(afterButton.css("display","inline"),prevChevron.removeClass(chevronDown),prevChevron.addClass(chevronUp),null!==previousSplitbar&&(prevSplitbarBeforeButton.css("display","inline"),prevSplitbarAfterButton.css("display","inline")))}),afterButton.on("click",function(){var nextSplitbarBeforeButton,nextSplitbarAfterButton,result=ctrl.toggleAfter(scope.splitbar),nextSplitbar=ctrl.getNextSplitbarContainer(scope.splitbar);null!==nextSplitbar&&(nextSplitbarBeforeButton=angular.element(nextSplitbar.element.children()[0]),nextSplitbarAfterButton=angular.element(nextSplitbar.element.children()[1])),ctrl.isUsingColumnFlow?result?(prevButton.css("display","none"),afterChevron.removeClass(chevronRight),afterChevron.addClass(chevronLeft),null!==nextSplitbar&&(nextSplitbarBeforeButton.css("display","none"),nextSplitbarAfterButton.css("display","none"))):(prevButton.css("display","inline"),afterChevron.removeClass(chevronLeft),afterChevron.addClass(chevronRight),null!==nextSplitbar&&(nextSplitbarBeforeButton.css("display","inline"),nextSplitbarAfterButton.css("display","inline"))):result?(prevButton.css("display","none"),afterChevron.removeClass(chevronDown),afterChevron.addClass(chevronUp),null!==nextSplitbar&&(nextSplitbarBeforeButton.css("display","none"),nextSplitbarAfterButton.css("display","none"))):(prevButton.css("display","inline"),afterChevron.removeClass(chevronUp),afterChevron.addClass(chevronDown),null!==nextSplitbar&&(nextSplitbarBeforeButton.css("display","inline"),nextSplitbarAfterButton.css("display","inline")))}),element.on("mousedown touchstart",function(e){return ctrl.movingSplitbar=scope.splitbar,ctrl.processSplitbar(scope.splitbar),e.preventDefault(),e.stopPropagation(),htmlElement.on("mousemove touchmove",function(event){scope.$apply(angular.bind(ctrl,ctrl.mouseMoveHandler,event))}),!1}),htmlElement.on("mouseup touchend",function(event){scope.$apply(angular.bind(ctrl,ctrl.mouseUpHandler,event)),htmlElement.off("mousemove touchmove")}),scope.$watch("splitbar.size",function(newValue){element.css(ctrl.sizeProperties.sizeProperty,newValue+"px")}),scope.$watch("splitbar."+ctrl.sizeProperties.flowProperty,function(newValue){element.css(ctrl.sizeProperties.flowProperty,newValue+"px")}),ctrl.addContainer(scope.splitbar)}}}]).directive("uiLayoutContainer",["LayoutContainer",function(LayoutContainer){return{restrict:"AE",require:"^uiLayout",scope:{},compile:function(element){var splitbar=angular.element('<div ui-splitbar><a><span class="glyphicon"></span></a><a><span class="glyphicon"></span></a></div>');return element.after(splitbar),{pre:function(scope,element,attrs,ctrl){scope.container=LayoutContainer.Container(),scope.container.element=element,ctrl.addContainer(scope.container)},post:function(scope,element,attrs,ctrl){element.hasClass("stretch")||element.addClass("stretch"),element.hasClass("ui-layout-container")||element.addClass("ui-layout-container"),scope.$watch("container.size",function(newValue){element.css(ctrl.sizeProperties.sizeProperty,newValue+"px")}),scope.$watch("container."+ctrl.sizeProperties.flowProperty,function(newValue){element.css(ctrl.sizeProperties.flowProperty,newValue+"px")})}}}}}]).factory("LayoutContainer",function(){function BaseContainer(){this.size=0,this.maxSize=null,this.minSize=0,this.resizable=!0,this.locked=!1,this.element=null,this.collapsed=!1}function SplitbarContainer(){this.size=10,this.left=0,this.top=0,this.element=null}return{Container:function(initialSize){return new BaseContainer(initialSize)},Splitbar:function(){return new SplitbarContainer},isSplitbar:function(container){return container instanceof SplitbarContainer}}});