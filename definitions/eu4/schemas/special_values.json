{
  "$schema": "http://json-schema.org/schema#",
  "$id": "http://jorodox.org/schemas/special_values.json",
  "type": "object",
  "definitions": {
    "boolean": {
      "type": "string",
      "enum": ["yes", "no", "YES", "NO"]
    },
    "any": {
      "type": "string",
      "enum": ["any"]
    },
    "all": {
      "type": "string",
      "enum": ["all"]
    },
    "any_or_all": {
      "type": "string",
      "enum": ["all", "any"]
    },
    "null": {
      "type": "string",
      "enum": ["null"]
    },
    "yes": {
      "type": "string",
      "enum": ["yes", "YES"]
    },
    "no": {
      "type": "string",
      "enum": ["no", "NO"]
    },
    "capital": {
      "type": "string",
      "enum": ["CAPITAL", "capital"]
    },
    "emperor": {
      "type": "string",
      "enum": ["emperor"]
    },
    "owner": {
      "type": "string",
      "enum": ["owner"]
    },
    "controller": {
      "type": "string",
      "enum": ["controller"]
    },
    "monarch_power_type": {
      "type": "string",
      "enum": ["ADM", "DIP", "MIL", "adm", "dip", "mil"]
    },
    "rebel_tags": {
      "type": "string",
      "enum": ["REB"]
    },
    "date": {
      "type": "string",
      "pattern": "^[0-9]{2,4}.[0-9]{1,2}.[0-9]{1,2}$"
    },
    "country_scope": {
      "type": "string",
      "enum": ["ROOT", "FROM", "PREV", "THIS", "root", "from", "prev", "this", "REB"]
    },
    "dynasty_or_scope": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "string",
          "enum": ["original_dynasty"]
        },
        {
          "$ref": "special_values.json#/definitions/country_scope"
        },
        {
          "$ref": "special_values.json#/definitions/event_target"
        }
      ]
    },
    "culture_or_scope": {
      "anyOf": [
        {
          "$ref": "identifiers.json#/definitions/cultures"
        },
        {
          "$ref": "special_values.json#/definitions/country_tag_or_scope"
        },
        {
          "$ref": "special_values.json#/definitions/event_target"
        }
      ]
    },
    "culture_or_scope_province": {
      "anyOf": [
        {
          "$ref": "identifiers.json#/definitions/cultures"
        },
        {
          "$ref": "special_values.json#/definitions/province_id_or_scope_province"
        },
        {
          "$ref": "special_values.json#/definitions/event_target"
        }
      ]
    },
    "religion_or_scope": {
      "anyOf": [
        {
          "$ref": "identifiers.json#/definitions/religions"
        },
        {
          "$ref": "special_values.json#/definitions/country_scope"
        },
        {
          "$ref": "special_values.json#/definitions/event_target"
        }
      ]
    },
    "tradegood_or_scope": {
      "anyOf": [
        {
          "$ref": "identifiers.json#/definitions/tradegoods"
        },
        {
          "$ref": "special_values.json#/definitions/province_scope"
        },
        {
          "$ref": "special_values.json#/definitions/event_target"
        }
      ]
    },
    "country_tag_or_scope": {
      "anyOf": [
        {
          "$ref": "identifiers.json#/definitions/country_tags"
        },
        {
          "$ref": "special_values.json#/definitions/country_scope"
        },
        {
          "$ref": "special_values.json#/definitions/emperor"
        },
        {
          "$ref": "special_values.json#/definitions/event_target"
        }
      ]
    },
    "country_tag_or_scope_province": {
      "anyOf": [
        {
          "$ref": "special_values.json#/definitions/country_tag_or_scope"
        },
        {
          "$ref": "special_values.json#/definitions/owner"
        },
        {
          "$ref": "special_values.json#/definitions/controller"
        }
      ]
    },
    "country_tag_or_scope_country": {
      "anyOf": [
        {
          "$ref": "special_values.json#/definitions/country_tag_or_scope"
        },
        {
          "$ref": "special_values.json#/definitions/capital"
        }
      ]
    },
    "country_tag_empty": {
      "type": "string",
      "enum": ["---"]
    },
    "country_tag_or_empty": {
      "anyOf": [
        {
          "$ref": "identifiers.json#/definitions/country_tags"
        },
        {
          "$ref": "special_values.json#/definitions/country_tag_empty"
        }
      ]
    },
    "province_id_or_scope": {
      "anyOf": [
        {
          "$ref": "identifiers.json#/definitions/map_province_ids"
        },
        {
          "$ref": "special_values.json#/definitions/province_scope"
        },
        {
          "$ref": "special_values.json#/definitions/event_target"
        }
      ]
    },
    "province_id_or_scope_country": {
      "anyOf": [
        {
          "$ref": "special_values.json#/definitions/province_id_or_scope"
        },
        {
          "$ref": "special_values.json#/definitions/capital"
        }
      ]
    },
    "province_id_or_scope_province": {
      "anyOf": [
        {
          "$ref": "special_values.json#/definitions/province_id_or_scope"
        },
        {
          "$ref": "special_values.json#/definitions/owner"
        },
        {
          "$ref": "special_values.json#/definitions/controller"
        }
      ]
    },
    "province_scope": {
      "type": "string",
      "enum": ["ROOT", "FROM", "PREV", "THIS", "root", "from", "prev", "this", "REB"]
    },
    "peace_offer_types": {
      "type": "string",
      "enum": [
        "po_demand_provinces",
        "po_revoke_cores",
        "po_release_vassals",
        "po_release_annexed",
        "po_return_cores",
        "po_become_vassal",
        "po_become_tributary_state",
        "po_form_personal_union",
        "po_transfer_vassals",
        "po_change_government",
        "po_gold",
        "po_concede_defeat",
        "po_take_mandate",
        "po_enforce_rebel_demands",
        "po_trade_power",
        "po_steer_trade",
        "po_annul_treaties",
        "po_dismantle_revolution",
        "po_change_religion",
        "po_change_hre_religion",
        "po_humiliate",
        "po_humiliate_rival",
        "po_revoke_elector",
        "po_force_migration",
        "po_independence"
      ]
    },
    "government_group_or_tribal": {
      "type": "string",
      "enum": ["monarchy", "republic", "theocracy", "tribal"]
    },
    "government_types": {
      "type": "string",
      "enum": ["monarchy", "republic", "theocracy", "tribal", "dictatorship", "religion", "papacy", "monastic", "nomad"]
    },
    "government_dictatorship": {
      "type": "string",
      "enum": ["dictatorship"]
    },
    "country_or_number": {
      "$mergeProps": [
        {
          "type": "number"
        },
        {
          "$ref": "identifiers.json#/definitions/country_tags"
        },
        {
          "$ref": "special_values.json#/definitions/country_scope"
        }
      ]
    },
    "province_or_number": {
      "$mergeProps": [
        {
          "type": "number"
        },
        {
          "$ref": "identifiers.json#/definitions/map_province_ids"
        },
        {
          "$ref": "special_values.json#/definitions/province_scope"
        }
      ]
    },
    "religion_or_contrast": {
      "$mergeProps": [
        {
          "type": "string",
          "enum": ["heretic", "heathen"]
        },
        {
          "$ref": "identifiers.json#/definitions/religions"
        }
      ]
    },
    "religion_or_secondary": {
      "$mergeProps": [
        {
          "type": "string",
          "enum": ["secondary"]
        },
        {
          "$ref": "identifiers.json#/definitions/religions"
        }
      ]
    },
    "flag_name": {
      "type": "string"
    },
    "save_game_key": {
      "type": "string"
    },
    "leader_types": {
      "type": "string",
      "enum": ["general", "admiral", "conquistador", "explorer"]
    },
    "leader_name": {
      "type": "string"
    },
    "random": {
      "type": "string",
      "enum": ["random"]
    },
    "variable_operation": {
      "anyOf": [
        {"$ref": "special_values.json#/definitions/variable_assign_variable"},
        {"$ref": "special_values.json#/definitions/variable_assign_value"}
      ]
    },
    "variable_assign_variable": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "which": {
          "type": "array",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "variable_assign_value": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "which": {"type": "string"},
        "value": {"type": "number"}
      }
    },
    "variable_arithmetic_trigger": {
      "properties": {
        "custom_tooltip": {
          "type": "string"
        },
        "export_to_variable": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "which": {
              "type": "string"
            },
            "variable_name": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "who": {
              "type": "string"
            }
          }
        },
        "is_variable_equal": {
          "$ref": "special_values.json#/definitions/variable_operation"
        },
        "check_variable": {
          "$ref": "special_values.json#/definitions/variable_operation"
        }
      }
    },
    "new_variable": {
      "type": "string",
      "pattern": "^new_variable:.+$"
    },
    "variable": {
      "type": "string",
      "pattern": "^variable:.+$"
    },
    "new_or_existing_variable": {
      "anyOf": [
        {"$ref": "special_values.json#/definitions/variable"},
        {"$ref": "special_values.json#/definitions/new_variable"}
      ]
    },
    "event_target": {
      "type": "string",
      "pattern": "^event_target:.+$"
    },
    "event_target_name": {
      "description": "Event name without the `event_target:` prefix.",
      "type": "string"
    },
    "construction": {
      "type": "string",
      "enum": [
        "core",
        "culture",
        "building",
        "merchant",
        "diplomat",
        "missionary",
        "army",
        "navy",
        "canal",
        "great_project",
        "siberian"
      ]
    },
    "ai_attitudes": {
      "type": "string",
      "enum": [
        "attitude_neutral",
        "atittude_rivalry",
        "attitude_hostile",
        "attitude_friendly",
        "attitude_defensive",
        "attitude_threatened",
        "attitude_outraged",
        "attitude_protective",
        "attitude_domineering",
        "attitude_overlord",
        "attitude_loyal",
        "attitude_disloyal",
        "attitude_rebellious",
        "attitude_allied"
      ]
    },
    "school_opinion": {
      "type": "number",
      "enum": [-1, 0, 1]
    },
    "advisor_or_simple": {
      "type": "string",
      "enum": ["advisor", "simple"]
    },
    "unit_type": {
      "type": "string",
      "enum": ["infantry", "cavalry", "artillery", "heavy_ship", "light_ship", "galley", "transport"]
    },
    "unit_type_land": {
      "type": "string",
      "enum": ["infantry", "cavalry", "artillery"]
    },
    "unit_type_sea": {
      "type": "string",
      "enum": ["heavy_ship", "light_ship", "galley", "transport"]
    },
    "unit_type_or_unit": {
      "$mergeProps": [
        {
          "$ref": "special_values.json#/definitions/unit_type"

        },
        {
          "$ref": "identifiers.json#/definitions/units"
        }
      ]
    },
    "government_rank": {
      "type": "number",
      "enum": [1, 2, 3]
    },
    "league": {
      "type": "string",
      "enum": ["catholic", "protestant"]
    },
    "rgb_color": {
      "type": "array",
      "minItems": 3,
      "maxItems": 3,
      "items": {
        "type": "number",
        "min": 0,
        "max": 255
      }
    },
    "rgb_color_float": {
      "type": "array",
      "minItems": 3,
      "maxItems": 3,
      "items": {
        "type": "string",
        "pattern": "^(0(\\.[0-9]+)?|1(\\.0+))$"
      }
    },
    "country_modifiers": {
      "anyOf": [
        {"$identifierValue": "<scope_key:country_modifiers.json#/definitions/country_modifiers>"},
        {"$identifierValue": "event_modifiers"},
        {"$identifierValue": "triggered_modifiers"},
        {"$identifierValue": "static_modifiers"}
      ],
      "type": "string"
    },
    "province_modifiers": {
      "anyOf": [
        {"$identifierValue": "<scope_key:province_modifiers.json#/definitions/province_modifiers>"},
        {"$identifierValue": "event_modifiers"},
        {"$identifierValue": "triggered_modifiers"},
        {"$identifierValue": "static_modifiers"}
      ],
      "type": "string"
    },
    "empty_array": {
      "type": "array",
      "maxItems": 0
    },
    "3d_position": {
      "type": "array",
      "minItems": 3,
      "maxItems": 3,
      "items": {
        "$ref": "special_values.json#/definitions/float"
      }
    },
    "2d_vector": {
      "type": "array",
      "minItems": 2,
      "maxItems": 2,
      "items": {
        "$ref": "special_values.json#/definitions/float"
      }
    },
    "float": {
      "type": "string",
      "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
    },
    "integer_string": {
      "type": "string",
      "pattern": "^-?[0-9]+$"
    },
    "3d_rotation": {
      "type": "array",
      "minItems": 3,
      "maxItems": 3,
      "items": {
        "$ref": "special_values.json#/definitions/float"
      }
    },
    "color_string": {
      "type": "string",
      "pattern": "^[0-9]{1,3},[0-9]{1,3},[0-9]{1,3}$"
    },
    "color_adjacency": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "nr": {
          "type": "number"
        },
        "size": {
          "type": "number"
        },
        "color_name": {
          "type": "string"
        },
        "adjacencies": {
          "type": "array",
          "items": {
            "$ref": "special_values.json#/definitions/color_string"
          }
        }
      }
    },
    "coordinate_xy": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      }
    },
    "empty_string_or_zero": {
      "anyOf": [
        {
          "type": "string",
          "enum": [""]
        },
        {
          "type": "number",
          "min": 0,
          "max": 0

        }
      ]
    },
    "gui_orientation": {
      "type": "string",
      "enum": [
        "UPPER_LEFT",
        "CENTER",
        "LOWER_RIGHT",
        "UPPER_RIGHT",
        "LOWER_LEFT",
        "CENTER_UP",
        "CENTER_DOWN",
        "RIGHT",
        "LEFT",
        "CENTER_LEFT",
        "CENTER_RIGHT"
      ]
    },
    "gui_orientation_lowercase": {
      "type": "string",
      "enum": [
        "upper_left",
        "center",
        "lower_right",
        "upper_right",
        "lower_left",
        "center_up",
        "center_down",
        "right",
        "left",
        "center_left",
        "center_right"
      ]
    },
    "gui_format": {
      "type": "string",
      "todo": "center or centre??",
      "enum": [
        "left",
        "centre",
        "center",
        "right"
      ]
    },
    "key_shortcuts": {
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "LEFT",
            "RIGHT",
            "UP",
            "DOWN",
            "LSHIFT",
            "RSHIFT",
            "LCTRL",
            "RCTRL",
            "LALT",
            "RALT",
            "PAUSE",
            "HOME",
            "BACKSPACE",
            "SPACE",
            "END",
            "INSERT",
            "TAB",
            "ESCAPE",
            "DEL",
            "PAGE_DOWN",
            "PAGE_UP",
            "RETURN",
            "KP_RETURN",
            "KP_PLUS",
            "KP_MINUS",
            "F1",
            "F2",
            "F3",
            "F4",
            "F5",
            "F6",
            "F7",
            "F8",
            "F9",
            "F10",
            "F11",
            "F12"
          ]
        },
        {
          "type": "string",
          "pattern": "^[0-9a-zA-Z]$"
        }
      ]
    }
  }
}